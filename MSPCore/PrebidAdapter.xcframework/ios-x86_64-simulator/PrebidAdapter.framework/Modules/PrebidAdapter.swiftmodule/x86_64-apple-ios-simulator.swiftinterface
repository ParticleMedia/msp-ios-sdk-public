// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PrebidAdapter
import Foundation
@_exported import PrebidAdapter
import PrebidMobile
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import shared
@_inheritsConvenienceInitializers @objc public class PrebidAdLoader : ObjectiveC.NSObject, shared.AdNetworkAdapter {
  @objc weak public var loadingDelegate: (any PrebidMobile.BannerEventLoadingDelegate)?
  @objc weak public var interactionDelegate: (any PrebidMobile.BannerEventInteractionDelegate)?
  @objc public var adSizes: [CoreFoundation.CGSize]
  @objc public func destroyAd()
  @objc public func initialize(initParams: any shared.InitializationParameters, adapterInitListener: any shared.AdapterInitListener, context: Any?)
  @objc public var rootViewController: UIKit.UIViewController?
  public var adListener: (any shared.AdListener)?
  public var bannerView: PrebidMobile.BannerView?
  public var priceInDollar: Swift.Double?
  @objc public func loadAdCreative(bidResponse: Any, adListener: any shared.AdListener, context: Any, adRequest: shared.AdRequest)
  public func registerRootViewController(rootViewController: UIKit.UIViewController?)
  @objc override dynamic public init()
  @objc deinit
}
extension PrebidAdapter.PrebidAdLoader : PrebidMobile.BannerViewDelegate {
  @objc dynamic public func bannerViewPresentationController() -> UIKit.UIViewController?
  @objc dynamic public func bannerViewDidReceiveBidResponse(_ bannerView: PrebidMobile.BannerView)
  @objc dynamic public func bannerView(_ bannerView: PrebidMobile.BannerView, didReceiveAdWithAdSize adSize: CoreFoundation.CGSize)
  @objc dynamic public func bannerView(_ bannerView: PrebidMobile.BannerView, didFailToReceiveAdWith error: any Swift.Error)
  @objc dynamic public func bannerViewWillPresentModal(_ bannerView: PrebidMobile.BannerView)
  @objc dynamic public func bannerViewDidDismissModal(_ bannerView: PrebidMobile.BannerView)
}
@objc @_inheritsConvenienceInitializers public class PrebidAd : shared.MSPAd {
  public var adView: UIKit.UIView?
  public var priceInDollar: Swift.Double?
  @objc override dynamic public init(adNetworkAdapter: any shared.AdNetworkAdapter)
  @objc deinit
}
extension PrebidAdapter.PrebidAdLoader : PrebidMobile.BannerEventHandler {
  @objc dynamic public func requestAd(with bidResponse: PrebidMobile.BidResponse?)
  @objc dynamic public func trackImpression()
}
@objc @_inheritsConvenienceInitializers public class PrebidBidLoader : shared.BidLoader {
  public var bidRequester: PrebidMobile.PBMBidRequester?
  public var configId: Swift.String?
  public var bidListener: (any shared.BidListener)?
  public var adRequest: shared.AdRequest?
  @objc override dynamic public init(googleQueryInfoFetcher: any shared.GoogleQueryInfoFetcher, facebookBidTokenProvider: any shared.FacebookBidTokenProvider)
  @objc override dynamic public func loadBid(placementId: Swift.String, adParams: [Swift.String : Any], bidListener: any shared.BidListener, adRequest: shared.AdRequest)
  public func loadBidWithQueryInfo(queryInfo: Swift.String)
  public func multiFormatAdUnitConfig(configId: Swift.String, gadQueryInfo: Swift.String, requestUUID: Swift.String, prebidBannerAdSize: CoreFoundation.CGSize) -> PrebidMobile.AdUnitConfig
  @objc deinit
}
extension PrebidAdapter.PrebidBidLoader : shared.GoogleQueryInfoListener {
  @objc dynamic public func onComplete(queryInfo: Swift.String)
}
